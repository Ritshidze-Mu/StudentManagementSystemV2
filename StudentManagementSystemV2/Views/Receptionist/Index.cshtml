@model StudentManagementSystemV2.Models.ViewModels.AppointmentListViewModel
@{
    ViewBag.Title = "Appointments";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Today's Appointments</h2>

            <!-- Filter Dropdown -->
            <div class="pull-right">
                @using (Html.BeginForm("Index", "Receptionist", FormMethod.Get))
                {
                    <div class="form-inline">
                        <div class="form-group">
                            @Html.DropDownList("filterStatus", new SelectList(new[]
                            {
                                new SelectListItem { Text = "All Appointments", Value = "" },
                                new SelectListItem { Text = "Confirmed", Value = "Confirmed" },
                                new SelectListItem { Text = "Checked In", Value = "CheckedIn" },
                                new SelectListItem { Text = "Completed", Value = "Completed" },
                                new SelectListItem { Text = "Cancelled", Value = "Cancelled" }
                            }, "Value", "Text", Model.FilterStatus), new { @class = "form-control", onchange = "this.form.submit()" })
                        </div>
                        <a href="@Url.Action("Dashboard", "Receptionist")" class="btn btn-default">
                            <i class="glyphicon glyphicon-dashboard"></i> Back to Dashboard
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Time</th>
                            <th>Patient</th>
                            <th>Student #</th>
                            <th>Nurse</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Appointments)
                        {
                            <tr>
                                <td>@item.AppointmentTime.ToString("hh\\:mm tt")</td>
                                <td>@item.User.FirstName @item.User.LastName</td>
                                <td>@item.User.StudentNumber</td>
                                <td>@(item.Nurse?.Name ?? "Not assigned")</td>
                                <td>
                                    <span class="label label-@GetStatusLabel(item.Status)">
                                        @item.Status
                                    </span>
                                </td>
                                <td>
                                    @if (item.Status == "Confirmed")
                                    {
                                        using (Html.BeginForm("CheckIn", "Receptionist", FormMethod.Post))
                                        {
                                            @Html.Hidden("id", item.Id)
                                            <button type="submit" class="btn btn-xs btn-success">
                                                <i class="glyphicon glyphicon-check"></i> Check In
                                            </button>
                                        }
                                    }
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-xs btn-info" })
                                    @Html.ActionLink("Cancel", "Cancel", new { id = item.Id }, new { @class = "btn btn-xs btn-danger" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusLabel(string status)
    {
        switch (status)
        {
            case "CheckedIn": return "primary";
            case "Completed": return "success";
            case "Cancelled": return "danger";
            default: return "warning";
        }
    }
}